{"version":3,"file":"static/js/986.19621b98.chunk.js","mappings":"qNAEA,ECG4B,SAAC,GAA0C,IAA7BA,EAA4B,EAAvCC,UAAsBC,EAAiB,EAAjBA,WAGnD,OAFuBC,EAAAA,EAAAA,KAAfC,WAE4CJ,GAA/B,SAAC,KAAD,CAAUK,GAAIH,GACpC,C,qECTYI,EAAkB,SAAC,GAAD,SAAGC,KAAgBC,OAAS,CAAC,CAA7B,EAClBC,EAAe,SAAC,GAAD,SAAGF,KAAgBG,OAAnB,EACfC,EAAa,SAAC,GAAD,SAAGJ,KAAgBK,IAAnB,EACbC,EAAqB,SAAC,GAAD,SAAGN,KAAgBO,YAAnB,ECmBlC,EAbgB,WACd,IAAMF,GAAOG,EAAAA,EAAAA,IAAYJ,GAIzB,MAAO,CACLP,YAJiBW,EAAAA,EAAAA,IAAYN,GAK7BK,cAJmBC,EAAAA,EAAAA,IAAYF,GAK/BD,KAAAA,EACAI,SALcD,EAAAA,EAAAA,IAAYT,GAO7B,C","sources":["routes/PrivateRoute/index.js","routes/PrivateRoute/PrivateRoute.jsx","redux/auth/authSelectors.js","shared/hooks/useAuth.js"],"sourcesContent":["import PrivateRoute from './PrivateRoute';\n\nexport default PrivateRoute;\n","// import PropTypes from 'prop-types';\nimport PropTypes from 'prop-types';\nimport  useAuth  from 'shared/hooks/useAuth';\nimport { Navigate } from 'react-router-dom';\n\nexport const PrivateRoute = ({ component: Component, redirectTo }) => {\n  const { isLoggedIn } = useAuth();\n\n  return !isLoggedIn ? <Navigate to={redirectTo} /> : Component;\n};\n\nPrivateRoute.propTypes = {\n  component: PropTypes.object.isRequired,\n  redirectTo: PropTypes.string.isRequired,\n};\n\nexport default PrivateRoute;\n","export const selectAuthError = ({ auth }) => auth.error || {};\nexport const selectIsAuth = ({ auth }) => auth.isLogin;\nexport const selectUser = ({ auth }) => auth.user;\nexport const selectIsRefreshing = ({ auth }) => auth.isRefreshing;\n","import { useSelector } from 'react-redux';\n\nimport {\n  selectAuthError,\n  selectIsAuth,\n  selectUser,\n  selectIsRefreshing,\n} from '../../redux/auth/authSelectors';\n\nconst useAuth = () => {\n  const user = useSelector(selectUser);\n  const isLoggedIn = useSelector(selectIsAuth);\n  const isRefreshing = useSelector(selectIsRefreshing);\n  const isError = useSelector(selectAuthError);\n  return {\n    isLoggedIn,\n    isRefreshing,\n    user,\n    isError,\n  };\n};\n\nexport default useAuth;\n"],"names":["Component","component","redirectTo","useAuth","isLoggedIn","to","selectAuthError","auth","error","selectIsAuth","isLogin","selectUser","user","selectIsRefreshing","isRefreshing","useSelector","isError"],"sourceRoot":""}