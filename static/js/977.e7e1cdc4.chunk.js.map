{"version":3,"file":"static/js/977.e7e1cdc4.chunk.js","mappings":"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","sources":["components/Auth/Form.styles.js","components/Auth/GoogleAuth/GoogleAuth.styles.js","components/Auth/GoogleAuth/index.js","components/Auth/GoogleAuth/GoogleAuth.jsx","components/Auth/Input/Input.styles.js","components/Auth/Input/Input.jsx","pages/LoginPage/LoginPage.styles.js","components/Auth/Login/LoginForm.jsx","components/Auth/Login/index.js","pages/LoginPage/index.js","pages/LoginPage/LoginPage.jsx","shared/components/Title/Title.styles.js","shared/components/Title/Title.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Field, Form } from 'formik';\nexport const Forms = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: ${props => props.theme.colors.textColor};\n  width: 100%;\n`;\nexport const Input = styled(Field)`\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid;\n  border-radius: ${props => props.theme.radius.normal};\n  background-color: ${props => props.theme.colors.backgroundModal};\n  color: ${props => props.theme.colors.inputText};\n\n  ::placeholder {\n    font-weight: ${props => props.theme.fontWeiths.normal};\n    font-size: ${props => props.theme.fontSizes.s};\n    color: inherit;\n  }\n  :focus {\n    outline: none;\n  }\n`;\nexport const InputEmail = styled(Input)`\n  border-color: ${props => props.error};\n`;\nexport const InputPassword = styled(Input)`\n  border-color: ${props => props.error};\n`;\nexport const InputContainer = styled.div`\n  display: flex;\n  margin-top: 40px;\n  margin-bottom: 60px;\n  flex-direction: column;\n  gap: 32px;\n  width: 100%;\n`;\nexport const Text = styled.p`\n  font-weight: ${props => props.theme.fontWeiths.normal};\n  font-size: ${props => props.theme.fontSizes.xs};\n  line-height: 16px;\n  color: ${props => props.theme.colors.inputText};\n  margin-top: 20px;\n`;\nexport const StyledLink = styled(Link)`\n  color: ${props => props.theme.colors.link};\n`;\nexport const Error = styled.p`\n  font-weight: ${props => props.theme.fontWeiths.normal};\n  font-size: ${props => props.theme.fontSizes.xs};\n  color: ${props => props.theme.colors.red};\n  padding-left: 12px;\n  margin-top: 4px;\n`;\nexport const Lable = styled.label`\n  position: relative;\n`;\nexport const AbsoluteDiv = styled.div`\n  position: absolute;\n  right: 17px;\n  top: 17px;\n  transform: translate(35%, -35%);\n`;\nexport const ToggleBtn = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  outline: none;\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: ${props => props.theme.colors.backgroundModal};\n  border-radius: 37px;\n  color: ${props => props.theme.colors.textColor};\n  gap: 20px;\n  padding: 40px 12px;\n  @media (min-width: 481px) {\n    padding: 60px 75px;\n  }\n`;\n","import styled from 'styled-components';\nimport Button from 'shared/components/Button';\n\nexport const AuthBtn = styled(Button)`\n  box-shadow: rgb(84, 173, 255) 0px 0px 0px 1px inset;\n`;\n","import GoogleAuth from './GoogleAuth';\n\nexport default GoogleAuth;\n","import Icon from 'shared/components/Icon';\nimport { AuthBtn } from './GoogleAuth.styles';\n\nconst GoogleAuth = () => {\n  return (\n    <AuthBtn>\n      <Icon id=\"google\" w=\"24\" h=\"24\" />\n      Continue with Google\n    </AuthBtn>\n  );\n};\n\nexport default GoogleAuth;\n","import { Field } from 'formik';\n\nimport styled from 'styled-components';\n\nexport const InputPassword = styled(Field)`\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid;\n  border-color: ${props => props.error};\n  border-radius: ${props => props.theme.radius.normal};\n  background: ${props => props.theme.colors.backgroundModal};\n  color: ${props => props.theme.colors.inputText};\n\n  ::placeholder {\n    font-weight: ${props => props.theme.fontWeiths.normal};\n    font-size: ${props => props.theme.fontSizes.s};\n    color: ${props => props.theme.colors.inputText};\n  }\n  :focus {\n    outline: none;\n  }\n`;\nexport const Error = styled.p`\n  font-weight: ${props => props.theme.fontWeiths.normal};\n  font-size: ${props => props.theme.fontSizes.xs};\n  color: ${props => props.theme.colors.red};\n  padding-left: 12px;\n  margin-top: 4px;\n`;\n\nexport const Lable = styled.label`\n  position: relative;\n`;\nexport const AbsoluteDiv = styled.div`\n  position: absolute;\n  right: 17px;\n  top: 17px;\n  transform: translate(35%, -35%);\n`;\nexport const ToggleBtn = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  outline: none;\n`;\n","import { useState } from 'react';\nimport { ErrorMessage } from 'formik';\n\nimport Icon from 'shared/components/Icon/Icon';\n\nimport {\n  ToggleBtn,\n  AbsoluteDiv,\n  Lable,\n  Error,\n  InputPassword,\n} from './Input.styles';\nimport { useEffect } from 'react';\n\nconst Input = ({ error, touched, name, placeholder, value }) => {\n  const [passwordType, setPasswordType] = useState('password');\n  const [isValide, setIsValide] = useState(false);\n  const togglePassword = () => {\n    if (passwordType === 'password') {\n      setPasswordType('text');\n      return;\n    }\n    setPasswordType('password');\n  };\n  useEffect(() => {\n    let error;\n    if (!value) {\n      error = 'Required';\n    } else if (value.lenght < 6) {\n      error = 'Password must be at least 6 characters';\n    } else if (value.lenght > 16) {\n      error = 'Password must be less than 16 characters';\n    } else if (\n      !/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,16}$/.test(value)\n    ) {\n      error =\n        'Password must contain at least 1 uppercase letter, 1 lowercase letter and 1 number';\n    } else if (!error) {\n      setIsValide(true);\n    }\n  }, [value]);\n  return (\n    <Lable>\n      <InputPassword\n        type={passwordType}\n        name={name}\n        placeholder={placeholder}\n        error={error && touched ? '#f43f5e' : isValide ? '#00C3AD' : '#54adff'}\n        autoComplete=\"off\"\n      />\n      <AbsoluteDiv>\n        {!error && isValide ? (\n          <Icon id={'complite'} s={'#00C3AD'} />\n        ) : (\n          <ToggleBtn type=\"button\" onClick={togglePassword}>\n            {passwordType === 'password' ? (\n              <Icon\n                id={'eye-closed'}\n                s={error && touched ? '#f43f5e' : '#54adff'}\n              />\n            ) : (\n              <Icon\n                id={'eye-open'}\n                s={error && touched ? '#f43f5e' : '#54adff'}\n              />\n            )}\n          </ToggleBtn>\n        )}\n      </AbsoluteDiv>\n      <ErrorMessage component={Error} name={name} />\n    </Lable>\n  );\n};\n\nexport default Input;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  max-width: 608px;\n  width: 100%;\n  box-shadow: ${props => props.theme.shadows.default};\n  border-radius: 40px;\n  @media (min-width: 768px) {\n    width: 608px;\n  }\n`;\nexport const CenrteredDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 100%;\n  padding: 0 20px;\n  @media (min-width: 768px) {\n    padding: 0 80px;\n  }\n  @media (min-width: 1240px) {\n    padding: 0;\n  }\n`;\n","import { useEffect } from 'react';\n\nimport { ErrorMessage, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  Forms,\n  InputEmail,\n  InputContainer,\n  Text,\n  StyledLink,\n  Error,\n  Lable,\n  AbsoluteDiv,\n  Wrapper,\n} from '../Form.styles';\nimport Input from '../Input/Input';\nimport Button from 'shared/components/Button/Button';\nimport Title from 'shared/components/Title/Title';\nimport Icon from 'shared/components/Icon/Icon';\n\nimport { login } from 'redux/auth/authOperations';\n\nimport { useNavigate } from 'react-router-dom';\nimport useAuth from 'shared/hooks/useAuth';\nimport { toast } from 'react-toastify';\nimport { clearError } from 'redux/auth/authSlice';\nimport GoogleAuth from '../GoogleAuth';\n\nconst validateShecma = t =>\n  Yup.object().shape({\n    email: Yup.string()\n      .email(`${t('Invalid_email_address')}`)\n      .required(`${t('Required')}`),\n    password: Yup.string()\n      .min(6, `${t('at_least_6_characters')}`)\n      .max(16, `${t('less_than_16_characters')}`)\n      .matches(\n        /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,16}$/,\n        `${t('one_uppercase_one_lowercase_one_number')}`\n      )\n      .required(`${t('Required')}`),\n  });\nconst LoginForm = () => {\n  const navigate = useNavigate();\n  const { isLoggedIn, isError } = useAuth();\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate('/notices/sell');\n    }\n    if (isError) {\n      toast.error(`${isError}`);\n      dispatch(clearError());\n    }\n  }, [isLoggedIn, navigate, isError, dispatch]);\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={(values, actions) => {\n          dispatch(\n            login({\n              email: values.email,\n              password: values.password,\n            })\n          );\n          actions.resetForm();\n        }}\n        validationSchema={validateShecma(t)}\n      >\n        {({ errors, touched, values }) => (\n          <Forms>\n            <Title\n              as=\"p\"\n              weight=\"500\"\n              tabSize=\"36\"\n              tabLine=\"1.36\"\n              tabweight=\"500\"\n              deskWeight=\"500\"\n              deskSize=\"36\"\n              deskLine=\"1.36\"\n            >\n              {t('Login_title')}\n            </Title>\n            <InputContainer>\n              <Lable>\n                <InputEmail\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder={t('Email')}\n                  error={errors.email && touched.email ? '#f43f5e' : '#54adff'}\n                />\n                {errors.email && touched.email && (\n                  <>\n                    <AbsoluteDiv>\n                      <Icon id={'cross'} s={'red'} />\n                    </AbsoluteDiv>\n                    <ErrorMessage component={Error} name=\"email\" />\n                  </>\n                )}\n              </Lable>\n              <Input\n                error={errors.password}\n                touched={touched.password}\n                name={'password'}\n                placeholder={t('Password')}\n                value={values.password}\n              />\n            </InputContainer>\n            <Button shape={'solid'} w={'100%'} h={'48'}>\n              {t('Log_IN')}\n            </Button>\n            <Text>\n              {t('Dont_have_an_account')}?\n              <StyledLink to={'/register'}> {t('Register')}</StyledLink>\n            </Text>\n          </Forms>\n        )}\n      </Formik>\n      <GoogleAuth />\n    </Wrapper>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from './LoginForm';\n\nexport default LoginForm;\n","import LoginPage from './LoginPage';\n\nexport default LoginPage;\n","import { CenrteredDiv, FormContainer } from './LoginPage.styles';\nimport LoginForm from 'components/Auth/Login';\nconst LoginPage = () => {\n  return (\n    <CenrteredDiv>\n      <FormContainer>\n        <LoginForm />\n      </FormContainer>\n    </CenrteredDiv>\n  );\n};\n\nexport default LoginPage;\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  font-family: ${props => props.font || props.theme.fonts.main};\n  text-align: ${props => props.align || 'center'};\n  font-weight: ${props => props.weight || props.theme.fontWeiths.bold}; /*700*/\n  font-size: ${props => props.size || props.theme.fontSizes.l}; /*24*/\n  line-height: ${props => props.line || '1.375'};\n  color: ${props => props.color || props.theme.colors.textColor};\n  letter-spacing: ${props => props.letterSpacing || 0};\n\n  @media ${props => props.theme.media.tab} {\n    font-weight: ${props => props.tabWeight || props.theme.fontWeiths.bold};\n    font-size: ${props => props.tabSize || props.theme.fontSizes.title};\n    line-height: ${props => props.tabLine || '1.375'};\n  }\n  @media ${props => props.theme.media.desk} {\n    font-weight: ${props => props.deskWeight || props.theme.fontWeiths.bold};\n    font-size: ${props => props.deskSize || props.theme.fontSizes.title};\n    line-height: ${props => props.deskLine || '1.375'};\n  }\n`;\n","import React from 'react';\nimport { MainTitle } from './Title.styles';\n\nconst Title = ({ children, ...rest }) => (\n  <MainTitle {...rest}>{children}</MainTitle>\n);\n\nexport default Title;\n"],"names":["Forms","styled","Form","props","theme","colors","textColor","Input","Field","radius","normal","backgroundModal","inputText","fontWeiths","fontSizes","s","InputEmail","error","InputContainer","Text","xs","StyledLink","Link","link","Error","red","Lable","AbsoluteDiv","Wrapper","AuthBtn","Button","Icon","id","w","h","InputPassword","ToggleBtn","touched","name","placeholder","value","useState","passwordType","setPasswordType","isValide","setIsValide","useEffect","lenght","test","type","autoComplete","onClick","component","FormContainer","shadows","default","CenrteredDiv","validateShecma","t","Yup","shape","email","required","password","min","max","matches","navigate","useNavigate","useAuth","isLoggedIn","isError","dispatch","useDispatch","useTranslation","toast","clearError","initialValues","onSubmit","values","actions","login","resetForm","validationSchema","errors","Title","as","weight","tabSize","tabLine","tabweight","deskWeight","deskSize","deskLine","to","GoogleAuth","Login","MainTitle","font","fonts","main","align","bold","size","l","line","color","letterSpacing","media","tab","tabWeight","title","desk","children","rest"],"sourceRoot":""}